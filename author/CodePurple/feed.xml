<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://jskim1215.github.io/author/CodePurple/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://jskim1215.github.io/" rel="alternate" type="text/html" />
  <updated>2021-08-25T19:02:36+09:00</updated>
  <id>https://jskim1215.github.io/author/CodePurple/feed.xml</id>

  
  
  

  
    <title type="html">우당탕 프로덕트 개발 여정 | </title>
  

  
    <subtitle>우당탕 프로덕트 개발 여정</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">베타 서비스 런칭 (08.20)</title>
      <link href="https://jskim1215.github.io/harudot-1-2" rel="alternate" type="text/html" title="베타 서비스 런칭 (08.20)" />
      <published>2021-08-19T10:01:05+09:00</published>
      <updated>2021-08-19T10:01:05+09:00</updated>
      <id>https://jskim1215.github.io/harudot-1-2</id>
      <content type="html" xml:base="https://jskim1215.github.io/harudot-1-2">&lt;h2 id=&quot;로그인-페이지&quot;&gt;로그인 페이지&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/73425926/130192252-9f68767a-6f85-4d48-a9a7-ccd151b75ba3.png&quot; alt=&quot;2-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nomadcoders.co/nwitter&quot;&gt;노마드 코더 Firebase 강의&lt;/a&gt; 강의에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authentication&lt;/code&gt; 구현 수업에서 배운 코드를 통해 구현했다.&lt;/p&gt;

&lt;h2 id=&quot;메인-페이지&quot;&gt;메인 페이지&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/73425926/130192391-c3191200-7e6d-4c08-b087-55ba769a4110.png&quot; alt=&quot;2-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4개의 박스로 각 기능들을 구분지어 구현했다. Todo List 아래 카테고리를 누르면 해당 카테고리만 볼 수 있도록 구현했다.&lt;/p&gt;

&lt;h2 id=&quot;마이-페이지&quot;&gt;마이 페이지&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/73425926/130192563-709cb95f-0d99-48c9-b11f-225677f82e49.png&quot; alt=&quot;2-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;우선 완료일, 소요시간 데이터만 완료한 일에 대해서 확인할 수 있다. 카테고리 별 총 소요시간과 Top 3 카테고리를 확인할 수 있는 기능만 구현해놓은 상태이다. 사용자들의 피드백에 맞추어 해당 페이지를 수정할 예정이다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="harudot" />
      

      
        <summary type="html">로그인 페이지</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">개인정보처리방침 (크롬 웹스토어용)</title>
      <link href="https://jskim1215.github.io/harudot-1-3" rel="alternate" type="text/html" title="개인정보처리방침 (크롬 웹스토어용)" />
      <published>2021-08-19T10:01:05+09:00</published>
      <updated>2021-08-19T10:01:05+09:00</updated>
      <id>https://jskim1215.github.io/harudot-1-3</id>
      <content type="html" xml:base="https://jskim1215.github.io/harudot-1-3">&lt;p&gt;개인정보처리방침&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;lt; HaruDot &amp;gt;(‘https://jskim1215.github.io/pecker/’이하 ‘하루닷’)&lt;/em&gt;은(는) 「개인정보 보호법」 제30조에 따라 정보주체의 개인정보를 보호하고 이와 관련한 고충을 신속하고 원활하게 처리할 수 있도록 하기 위하여 다음과 같이 개인정보 처리방침을 수립·공개합니다.&lt;/p&gt;

&lt;p&gt;○ 이 개인정보처리방침은 &lt;em&gt;2021&lt;/em&gt;년 &lt;em&gt;8&lt;/em&gt;월 &lt;em&gt;24&lt;/em&gt;부터 적용됩니다.&lt;/p&gt;

&lt;p&gt;**제1조(개인정보의 처리 목적)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;lt; HaruDot &amp;gt;(‘https://jskim1215.github.io/pecker/’이하 ‘하루닷’)&lt;/em&gt;은(는) 다음의 목적을 위하여 개인정보를 처리합니다. 처리하고 있는 개인정보는 다음의 목적 이외의 용도로는 이용되지 않으며 이용 목적이 변경되는 경우에는 「개인정보 보호법」 제18조에 따라 별도의 동의를 받는 등 필요한 조치를 이행할 예정입니다.**&lt;/p&gt;

&lt;p&gt;1. 홈페이지 회원가입 및 관리&lt;/p&gt;

&lt;p&gt;회원 가입의사 확인, 회원제 서비스 제공에 따른 본인 식별·인증 목적으로 개인정보를 처리합니다.&lt;/p&gt;

&lt;p&gt;2. 재화 또는 서비스 제공&lt;/p&gt;

&lt;p&gt;콘텐츠 제공, 맞춤서비스 제공, 본인인증을 목적으로 개인정보를 처리합니다.&lt;/p&gt;

&lt;p&gt;3. 마케팅 및 광고에의 활용&lt;/p&gt;

&lt;p&gt;신규 서비스(제품) 개발 및 맞춤 서비스 제공, 이벤트 및 광고성 정보 제공 및 참여기회 제공 , 접속빈도 파악 또는 회원의 서비스 이용에 대한 통계 등을 목적으로 개인정보를 처리합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제2조(개인정보의 처리 및 보유 기간)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① &lt;em&gt;&amp;lt; HaruDot &amp;gt;&lt;/em&gt;은(는) 법령에 따른 개인정보 보유·이용기간 또는 정보주체로부터 개인정보를 수집 시에 동의받은 개인정보 보유·이용기간 내에서 개인정보를 처리·보유합니다.&lt;/p&gt;

&lt;p&gt;② 각각의 개인정보 처리 및 보유 기간은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.&lt;홈페이지 회원가입=&quot;&quot; 및=&quot;&quot; 관리=&quot;&quot;&gt;&lt;/홈페이지&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;홈페이지 회원가입=&quot;&quot; 및=&quot;&quot; 관리=&quot;&quot;&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터&amp;lt;3년&amp;gt;까지 위 이용목적을 위하여 보유.이용됩니다.
&lt;/홈페이지&gt;
  &lt;/li&gt;
  &lt;li&gt;보유근거 : HaruDot 서비스의 개인 학습 데이터 분석을 위해 보유&lt;/li&gt;
  &lt;li&gt;관련법령 :&lt;/li&gt;
  &lt;li&gt;예외사유 :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;제3조(개인정보의 제3자 제공)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① &lt;em&gt;&amp;lt; HaruDot &amp;gt;은(는) 개인정보를 제1조(개인정보의 처리 목적)에서 명시한 범위 내에서만 처리하며, 정보주체의 동의, 법률의 특별한 규정 등 「개인정보 보호법」 제17조 및 제18조에 해당하는 경우에만 개인정보를 제3자에게 제공합니다.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;② &amp;lt; HaruDot &amp;gt;은(는) 다음과 같이 개인정보를 제3자에게 제공하고 있습니다.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;1. &amp;lt; HaruDot &amp;gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;개인정보를 제공받는 자 : HaruDot&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;제공받는 자의 개인정보 이용목적 : 이메일&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;제공받는 자의 보유.이용기간: 3년&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제4조(개인정보처리 위탁)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① &lt;em&gt;&amp;lt; HaruDot &amp;gt;&lt;/em&gt;은(는) 원활한 개인정보 업무처리를 위하여 다음과 같이 개인정보 처리업무를 위탁하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1. &amp;lt; &amp;gt;&lt;/li&gt;
  &lt;li&gt;위탁받는 자 (수탁자) :&lt;/li&gt;
  &lt;li&gt;위탁하는 업무의 내용 :&lt;/li&gt;
  &lt;li&gt;위탁기간 :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;② &amp;lt; HaruDot &amp;gt;은(는) 위탁계약 체결시 「개인정보 보호법」 제26조에 따라 위탁업무 수행목적 외 개인정보 처리금지, 기술적․관리적 보호조치, 재위탁 제한, 수탁자에 대한 관리․감독, 손해배상 등 책임에 관한 사항을 계약서 등 문서에 명시하고, 수탁자가 개인정보를 안전하게 처리하는지를 감독하고 있습니다.&lt;/p&gt;

&lt;p&gt;③ 위탁업무의 내용이나 수탁자가 변경될 경우에는 지체없이 본 개인정보 처리방침을 통하여 공개하도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제5조(정보주체와 법정대리인의 권리·의무 및 그 행사방법)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① 정보주체는 HaruDot에 대해 언제든지 개인정보 열람·정정·삭제·처리정지 요구 등의 권리를 행사할 수 있습니다.&lt;/p&gt;

&lt;p&gt;② 제1항에 따른 권리 행사는HaruDot에 대해 「개인정보 보호법」 시행령 제41조제1항에 따라 서면, 전자우편, 모사전송(FAX) 등을 통하여 하실 수 있으며 HaruDot은(는) 이에 대해 지체 없이 조치하겠습니다.&lt;/p&gt;

&lt;p&gt;③ 제1항에 따른 권리 행사는 정보주체의 법정대리인이나 위임을 받은 자 등 대리인을 통하여 하실 수 있습니다.이 경우 “개인정보 처리 방법에 관한 고시(제2020-7호)” 별지 제11호 서식에 따른 위임장을 제출하셔야 합니다.&lt;/p&gt;

&lt;p&gt;④ 개인정보 열람 및 처리정지 요구는 「개인정보 보호법」 제35조 제4항, 제37조 제2항에 의하여 정보주체의 권리가 제한 될 수 있습니다.&lt;/p&gt;

&lt;p&gt;⑤ 개인정보의 정정 및 삭제 요구는 다른 법령에서 그 개인정보가 수집 대상으로 명시되어 있는 경우에는 그 삭제를 요구할 수 없습니다.&lt;/p&gt;

&lt;p&gt;⑥ HaruDot은(는) 정보주체 권리에 따른 열람의 요구, 정정·삭제의 요구, 처리정지의 요구 시 열람 등 요구를 한 자가 본인이거나 정당한 대리인인지를 확인합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제6조(처리하는 개인정보의 항목 작성)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① &lt;em&gt;&amp;lt; HaruDot &amp;gt;&lt;/em&gt;은(는) 다음의 개인정보 항목을 처리하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1&amp;lt; 홈페이지 회원가입 및 관리 &amp;gt;&lt;/li&gt;
  &lt;li&gt;필수항목 : 이메일, 서비스 이용 기록, 접속 로그, 쿠키&lt;/li&gt;
  &lt;li&gt;선택항목 :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;제7조(개인정보의 파기)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_&lt;br /&gt;
① &amp;lt; HaruDot &amp;gt; 은(는) 개인정보 보유기간의 경과, 처리목적 달성 등 개인정보가 불필요하게 되었을 때에는 지체없이 해당 개인정보를 파기합니다.&lt;/p&gt;

&lt;p&gt;② 정보주체로부터 동의받은 개인정보 보유기간이 경과하거나 처리목적이 달성되었음에도 불구하고 다른 법령에 따라 개인정보를 계속 보존하여야 하는 경우에는, 해당 개인정보를 별도의 데이터베이스(DB)로 옮기거나 보관장소를 달리하여 보존합니다.&lt;br /&gt;
1. 법령 근거 :&lt;br /&gt;
2. 보존하는 개인정보 항목 : 계좌정보, 거래날짜&lt;/p&gt;

&lt;p&gt;③ 개인정보 파기의 절차 및 방법은 다음과 같습니다.&lt;br /&gt;
1. 파기절차&lt;br /&gt;
&amp;lt; HaruDot &amp;gt; 은(는) 파기 사유가 발생한 개인정보를 선정하고, &amp;lt; HaruDot &amp;gt; 의 개인정보 보호책임자의 승인을 받아 개인정보를 파기합니다.&lt;br /&gt;
_&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2. 파기방법&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;전자적 파일 형태의 정보는 기록을 재생할 수 없는 기술적 방법을 사용합니다&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;**제8조(개인정보의 안전성 확보 조치)_&lt;/p&gt;

&lt;p&gt;&amp;lt; HaruDot &amp;gt;_은(는) 개인정보의 안전성 확보를 위해 다음과 같은 조치를 취하고 있습니다.**&lt;/p&gt;

&lt;p&gt;1. 개인정보에 대한 접근 제한&lt;br /&gt;
개인정보를 처리하는 데이터베이스시스템에 대한 접근권한의 부여,변경,말소를 통하여 개인정보에 대한 접근통제를 위하여 필요한 조치를 하고 있으며 침입차단시스템을 이용하여 외부로부터의 무단 접근을 통제하고 있습니다.&lt;/p&gt;

&lt;p&gt;2. 문서보안을 위한 잠금장치 사용&lt;br /&gt;
개인정보가 포함된 서류, 보조저장매체 등을 잠금장치가 있는 안전한 장소에 보관하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제9조(개인정보 자동 수집 장치의 설치•운영 및 거부에 관한 사항)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HaruDot 은(는) 정보주체의 이용정보를 저장하고 수시로 불러오는 ‘쿠키(cookie)’를 사용하지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제10조 (개인정보 보호책임자)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① HaruDot 은(는) 개인정보 처리에 관한 업무를 총괄해서 책임지고, 개인정보 처리와 관련한 정보주체의 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자를 지정하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;▶ 개인정보 보호책임자&lt;/li&gt;
  &lt;li&gt;성명 :김종식&lt;/li&gt;
  &lt;li&gt;직책 :운영자&lt;/li&gt;
  &lt;li&gt;직급 :운영자&lt;/li&gt;
  &lt;li&gt;연락처 :01092505762, kjs01092505762@gmail.com,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ 개인정보 보호 담당부서로 연결됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;▶ 개인정보 보호 담당부서&lt;/li&gt;
  &lt;li&gt;부서명 :&lt;/li&gt;
  &lt;li&gt;담당자 :&lt;/li&gt;
  &lt;li&gt;연락처 :, ,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;② 정보주체께서는 HaruDot 의 서비스(또는 사업)을 이용하시면서 발생한 모든 개인정보 보호 관련 문의, 불만처리, 피해구제 등에 관한 사항을 개인정보 보호책임자 및 담당부서로 문의하실 수 있습니다. HaruDot 은(는) 정보주체의 문의에 대해 지체 없이 답변 및 처리해드릴 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제11조(개인정보 열람청구)&lt;br /&gt;
정보주체는 ｢개인정보 보호법｣ 제35조에 따른 개인정보의 열람 청구를 아래의 부서에 할 수 있습니다.&lt;br /&gt;
&amp;lt; HaruDot &amp;gt;은(는) 정보주체의 개인정보 열람청구가 신속하게 처리되도록 노력하겠습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;▶ 개인정보 열람청구 접수·처리 부서&lt;/li&gt;
  &lt;li&gt;부서명 :&lt;/li&gt;
  &lt;li&gt;담당자 :&lt;/li&gt;
  &lt;li&gt;연락처 : , ,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;제12조(권익침해 구제방법)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;정보주체는 개인정보침해로 인한 구제를 받기 위하여 개인정보분쟁조정위원회, 한국인터넷진흥원 개인정보침해신고센터 등에 분쟁해결이나 상담 등을 신청할 수 있습니다. 이 밖에 기타 개인정보침해의 신고, 상담에 대하여는 아래의 기관에 문의하시기 바랍니다.&lt;/p&gt;

&lt;p&gt;1. 개인정보분쟁조정위원회 : (국번없이) 1833-6972 (www.kopico.go.kr)&lt;br /&gt;
2. 개인정보침해신고센터 : (국번없이) 118 (privacy.kisa.or.kr)&lt;br /&gt;
3. 대검찰청 : (국번없이) 1301 (www.spo.go.kr)&lt;br /&gt;
4. 경찰청 : (국번없이) 182 (cyberbureau.police.go.kr)&lt;/p&gt;

&lt;p&gt;「개인정보보호법」제35조(개인정보의 열람), 제36조(개인정보의 정정·삭제), 제37조(개인정보의 처리정지 등)의 규정에 의한 요구에 대 하여 공공기관의 장이 행한 처분 또는 부작위로 인하여 권리 또는 이익의 침해를 받은 자는 행정심판법이 정하는 바에 따라 행정심판을 청구할 수 있습니다.&lt;/p&gt;

&lt;p&gt;※ 행정심판에 대해 자세한 사항은 중앙행정심판위원회(www.simpan.go.kr) 홈페이지를 참고하시기 바랍니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제13조(개인정보 처리방침 변경)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① 이 개인정보처리방침은 2021년 8월 24부터 적용됩니다.&lt;/p&gt;

&lt;p&gt;② 이전의 개인정보 처리방침은 아래에서 확인하실 수 있습니다.&lt;/p&gt;

&lt;p&gt;예시 ) - 20XX. X. X ~ 20XX. X. X 적용 (클릭)&lt;/p&gt;

&lt;p&gt;예시 ) - 20XX. X. X ~ 20XX. X. X 적용 (클릭)&lt;/p&gt;

&lt;p&gt;예시 ) - 20XX. X. X ~ 20XX. X. X 적용 (클릭)&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="harudot" />
      

      
        <summary type="html">개인정보처리방침</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">서비스 런칭 준비 과정 - 입문 개발자 기계공학부 학생에서</title>
      <link href="https://jskim1215.github.io/harudot-1-1" rel="alternate" type="text/html" title="서비스 런칭 준비 과정 - 입문 개발자 기계공학부 학생에서" />
      <published>2021-08-19T10:01:04+09:00</published>
      <updated>2021-08-19T10:01:04+09:00</updated>
      <id>https://jskim1215.github.io/harudot-1-1</id>
      <content type="html" xml:base="https://jskim1215.github.io/harudot-1-1">&lt;h2 id=&quot;서비스-기획-의도&quot;&gt;서비스 기획 의도&lt;/h2&gt;

&lt;p&gt;코로나 시대가 되고 온라인으로 수업을 듣고 과제를 제출하는 과정이 잦아졌다. 하지만 생각보다 대학교 학습 지원 사이트에서 과제를 확인하는 것은 여전히 불편했다. 어떤 교수님은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;메일&lt;/code&gt;로 과제를 제출해야하고, 어떤 교수님은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;과제란&lt;/code&gt;을 활용해서 과제를 제출하도록 수업을 진행하신다.&lt;/p&gt;

&lt;p&gt;처음 학습 지원 사이트를 들어가서 과제가 있는지 확인하는 과정은 너무 번거롭다. 우선 목차 형태로 수업 리스트를 확인한 후, 각 수업 페이지로 접속해서 공지사항과 과제란을 확인하면서 과제가 있는지 확인한다. 물론 5~7개 정도 되는 수업의 과제를 기억하고 제출하는데는 크게 어렵지 않지만 마감일이 언제까지인지 기억하고 있기에는 내 인지능력을 계속해서 사용해야한다는 생각이 들었다.&lt;/p&gt;

&lt;p&gt;과거의 경험과 친구들의 사용환경을 고려했을 때, 자체 메모장을 활용해 직접 들어가서 과제를 계속해서 확인하는 과정을 줄이려는 노력을 관찰했다.&lt;/p&gt;

&lt;p&gt;대학생의 경우, 대부분의 학습 환경이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;노트북&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;태블릿 PC&lt;/code&gt;를 통해 이루어진다. 그래서 사용률이 가장 높은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;크롬 브라우저 익스텐션&lt;/code&gt; 형태로 매번 새 탭을 불러올 때마다, Todo List를 불러올 수 있다면 학습 환경에 도움이 되지 않을까? 라는 아이디어에서 시작했다.&lt;/p&gt;

&lt;h2 id=&quot;서비스-준비-과정&quot;&gt;서비스 준비 과정&lt;/h2&gt;

&lt;p&gt;창업을 늘 희망해왔으나 직접 서비스를 만들어서 런칭을 해본 적이 없다. 스스로 개발자가 되지 않을 것이라면서 기획만 열심히 준비해봤지만 그렇게 돌아오는 결과는 늘 회의적이였다. 간단하게 생각하면 내 기획력으로 개발을 도와줄 개발자가 있을까? 역으로 생각해보면 간단한 일이였는데 말이다. 실제로 개발을 준비하는 과정에서 내가 얼마나 기획에 있어서 무지했는지 느끼기도 했다.&lt;/p&gt;

&lt;p&gt;우연한 기회에 &lt;a href=&quot;https://nomadcoders.co/courses&quot;&gt;노마드 코더&lt;/a&gt;의 무료 강의들을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt;라는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Javascript 라이브러리&lt;/code&gt;를 배울 수 있었고 1주 안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javascript&lt;/code&gt; 그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Firebase&lt;/code&gt; 관련 수업을 듣고 서비스 개발을 시작했다.&lt;/p&gt;

&lt;h2 id=&quot;mvp-제작&quot;&gt;MVP 제작&lt;/h2&gt;

&lt;p&gt;일단 제작 목적을 다시 한 번 명확히 했다. 노트북 학습 환경이 주를 이루는 대학생의 경우, 할 일 목록을 쉽게 확인하고 공부 시간을 기록함으로써 자신의 학습 상황을 돌아볼 수 있도록하는 것. 해당 아이디어를 검증하기 위한 최소 기능을 몇가지 나열했다.&lt;/p&gt;

&lt;h3 id=&quot;로그인-페이지&quot;&gt;로그인 페이지&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Firebase&lt;/code&gt;를 활용해서 우선 쉽게 로그인 기능을 제작했다. 추후 백엔드 개발자를 구해서 자체 서버를 통해 사용자들의 행동 데이터 분석에 더욱 효과적으로 할 예정이다.&lt;/p&gt;

&lt;h3 id=&quot;할-일-목록-입력란&quot;&gt;할 일 목록 입력란&lt;/h3&gt;

&lt;p&gt;할 일 데이터를 입력 받을 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;카테고리, 형식, 마감일&lt;/code&gt; 데이터를 추가함으로써 해당 Task에 대한 정보를 인지하기 쉽도록 했다.&lt;/p&gt;

&lt;h3 id=&quot;스터디-타이머&quot;&gt;스터디 타이머&lt;/h3&gt;

&lt;p&gt;웹 페이지 특성 상, 여러 탭을 켜놓을 수 있으니 탭 하나를 할애해서 공부 시간을 기록할 수 있도록 했다. 타이머의 부가적인 기능은 추가로 업데이트 예정이다.&lt;/p&gt;

&lt;h3 id=&quot;히스토리-페이지&quot;&gt;히스토리 페이지&lt;/h3&gt;

&lt;p&gt;스터디 타이머의 기능을 최대한 활용하기 위한 페이지이다. 공부 시간을 기록하고 완료할 경우 개인 히스토리 페이지를 통해 과거 기록을 확인하고 분석해볼 수 있다. 부가적인 기능이 더 필요할 것 같은 페이지로 최소 기능 구현에 초점을 맞추고 일단 제작했다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="harudot" />
      

      
        <summary type="html">서비스 기획 의도</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Array 관련 함수 정리 (Sort, Reduce)</title>
      <link href="https://jskim1215.github.io/study-0-2" rel="alternate" type="text/html" title="Array 관련 함수 정리 (Sort, Reduce)" />
      <published>2021-08-18T10:01:01+09:00</published>
      <updated>2021-08-18T10:01:01+09:00</updated>
      <id>https://jskim1215.github.io/study-0-2</id>
      <content type="html" xml:base="https://jskim1215.github.io/study-0-2">&lt;h2 id=&quot;sort&quot;&gt;Sort&lt;/h2&gt;

&lt;p&gt;Array를 정렬해주는 기능을 한다. &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;MDN 문서&lt;/a&gt;에서 자세한 내용을 확인할 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기본적인 형태는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array.sort(&quot;function&quot;)&lt;/code&gt;이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;오름차순-내림차순&quot;&gt;오름차순, 내림차순&lt;/h3&gt;

&lt;p&gt;이게 단어가 오름차순, 내림차순이라고 말하면 순간 헷갈리게 된다. 그래서 계속해서 보고 완전히 외워놓는 것이 좋다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;오름차순&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;내림차순&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;원리&quot;&gt;원리&lt;/h3&gt;

&lt;p&gt;우선 그냥 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.sort()&lt;/code&gt;로 실행할 경우, 문자열의 유니코드 코드 포인트에 따라서 정렬된다. 코드로 직접 보면 무슨 말인지 이해할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;months&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;March&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Jan&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Feb&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Dec&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// expected output: Array [&quot;Dec&quot;, &quot;Feb&quot;, &quot;Jan&quot;, &quot;March&quot;]&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;array1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// expected output: Array [1, 100000, 21, 30, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;대부분의 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sort Function&lt;/code&gt;을 통해 원하는 정렬 기능을 구현할 것이다. 간단하게 원리는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sort Function&lt;/code&gt;이 Array Elemnet에서 2개의 args를 받는다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;f(a,b) &amp;lt; 0 : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt;가 앞으로&lt;/li&gt;
  &lt;li&gt;f(a,b) &amp;gt; 0 : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt;가 앞으로&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f = (a-b)&lt;/code&gt;의 경우, b가 작은 경우 계속 앞으로 가게 되므로 오름차순으로 정렬될 것이다.&lt;/p&gt;

&lt;h3 id=&quot;실전-예시&quot;&gt;실전 예시&lt;/h3&gt;

&lt;p&gt;프로젝트에서 마감일 순으로 할 일들을 분류해야할 때 사용한 코드이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date_ascending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dateA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;duedate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dateB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;duedate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dateA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dateB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;filteredTodoLists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date_ascending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a의 duedate&lt;/code&gt;가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b의 duedate&lt;/code&gt;보다 클 경우, 1을 return하기 때문에 작은 duedate Elemnet들이 앞으로 정렬될 것이다.&lt;/p&gt;

&lt;h2 id=&quot;reduce&quot;&gt;Reduce&lt;/h2&gt;

&lt;p&gt;reduce 함수는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&lt;/code&gt;처럼 Array를 반복하면서 코드를 진행시킨다. &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&quot;&gt;MDN 문서&lt;/a&gt;에서 자세한 내용을 확인할 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기본적인 형태는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array.reduce(reducer(=함수), initialValue)&lt;/code&gt;이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reducer-함수&quot;&gt;reducer 함수&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reducer 함수&lt;/code&gt;는 4가지 인자를 받는다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accumulator&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;함수가 실행될 때마다 Return한 값. 즉 매 함수가 연산될 때마다 반환되는 결과 값이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;currentvalue&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;반복을 실행했을 때, 이번 회차에서 처리할 값.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;currentIndex&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;이번 회차가 몇번째인지에 대한 정보&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;반복이 진행되는 원래 배열에 대한 정보&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;원리-1&quot;&gt;원리&lt;/h3&gt;

&lt;p&gt;accumulator에 initialValue가 존재한다면 initialValue가 들어가고, 아니면 Array[0]가 들어간다.&lt;/p&gt;

&lt;p&gt;이후에 Array의 다음 요소에서 또 reducer함수를 실행시킬텐데 이 때, Array[1]이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;currentvalue&lt;/code&gt;가 되는 것이다. 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;currentvalue&lt;/code&gt;에 어떠한 처리를 해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accumulator에 추가할지&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reducer 함수&lt;/code&gt;에서 구현하면 된다.&lt;/p&gt;

&lt;h3 id=&quot;실전-예시-1&quot;&gt;실전 예시&lt;/h3&gt;

&lt;p&gt;프로젝트에서 완료한 할 일들의 카테고리별 시간 합산 데이터를 구하기 위해 사용한 코드이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;studyTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;studyTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todoLists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;할 일 목록은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;객체로 구성된 배열&lt;/code&gt;이라서 map 함수를 활용해서 subject가 있는지 판단하고 있다면 시간을 더하는 연산을 하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;빈 배열&lt;/code&gt;을 하나 선언한 다음 그것을 활용해서 구현해야 될 것 같다는 생각이 들었는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reduce&lt;/code&gt;를 활용하면 더 쉽게 구현할 수 있는 것 같았다.&lt;/p&gt;

&lt;p&gt;구현 과정은 단순하게 이미 subject가 있으면 존재하는 subject의 studyTime에다가 더하고 없다면 subject key값에 현재 studyTime을 추가해서 전달하기. 이런 방식을 통해 전체 완료한 할 일 목록을 정리할 수 있었다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="study" />
      

      
        <summary type="html">Sort</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(React with Firebase) - Chrome Extension 프로젝트시 주의해야할 점</title>
      <link href="https://jskim1215.github.io/study-0-1" rel="alternate" type="text/html" title="(React with Firebase) - Chrome Extension 프로젝트시 주의해야할 점" />
      <published>2021-08-17T10:01:01+09:00</published>
      <updated>2021-08-17T10:01:01+09:00</updated>
      <id>https://jskim1215.github.io/study-0-1</id>
      <content type="html" xml:base="https://jskim1215.github.io/study-0-1">&lt;h2 id=&quot;react-router-dom-사용-불가&quot;&gt;React-Router-DOM 사용 불가&lt;/h2&gt;

&lt;p&gt;우선 기존의 프로젝트를 만드는 과정에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Router&lt;/code&gt;을 활용해 프로젝트 구조를 만들어 놓았다. 이렇게 만든 사이트를 크롬에서 새로운 탭을 생성했을 경우 자동적으로 해당 사이트가 펼쳐지도록 하면 될 줄 알았으나 Chrome Extension과 일반적인 React Project가 100퍼센트 똑같은 방법으로 진행되지는 않는 것 같다고 느꼈다.&lt;/p&gt;

&lt;p&gt;가장 큰 차이점으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Router&lt;/code&gt;를 사용해서 프로젝트 구조를 만들었던 것을 변경했어야했다. 그래서 기존의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Route.js&lt;/code&gt; 파일 대신 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Main.js&lt;/code&gt;라는 파일을 만들어 비슷한 기능을 하도록 구현했다. &lt;a href=&quot;https://github.com/kelsonpw/react-chrome-extension-router&quot;&gt;react-chrome-extension-router&lt;/a&gt;라는 라이브러리가 존재하는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt; 기능을 어떻게 해결할지를 모르겠어가지고 일단은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;router&lt;/code&gt; 기능 없이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;추가 Javascript File&lt;/code&gt;을 만들어서 비슷한 결과를 만들어내는데 성공은 했다.&lt;/p&gt;

&lt;h2 id=&quot;social-login-사용시-주의-사항&quot;&gt;Social Login 사용시 주의 사항&lt;/h2&gt;

&lt;p&gt;Chrome Extension에서 Firebase를 사용하는데 몇가지 설정해야하는 내용이 있다. 설정을 하지 않을 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Social Login Popup 창&lt;/code&gt;이 등장하지 않기 때문에 아래 설정들을 해줘야한다.&lt;/p&gt;

&lt;h3 id=&quot;firebase-상의-문제&quot;&gt;Firebase 상의 문제&lt;/h3&gt;

&lt;p&gt;일단 Firebase에서 승인된 도메인이 아니면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Popup 창&lt;/code&gt;이 자동적으로 닫히게 된다. 일반적인 경우, &lt;a href=&quot;https://developers-kr.googleblog.com/2016/08/how-to-use-firebase-in-chrome-extension.html&quot;&gt;구글 문서&lt;/a&gt;를 따라하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create-React-App&lt;/code&gt;을 활용한 프로젝트 때문이라고 생각되는데 기존의 방식으로 프로젝트의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Javascript File&lt;/code&gt;을 추가하고 HTML File에 업로드하는 것이 하라는 대로 되지 않아서 개인적으로 내린 결론이니 정석적인 방법은 아닌 점 참고해주세요.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Firebase Auth 페이지에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sign-in method -&amp;gt; 승인된 도메인&lt;/code&gt;에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chrome-extension:// 자기 아이디 &lt;/code&gt;를 추가한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;csp&quot;&gt;CSP&lt;/h3&gt;

&lt;p&gt;이렇게 해도 chrome extension에 오류라고 뜨는 내용이 있다. 계속해서 Content-Security-Policy 때문에 해당 URL에 접근할 수 없다는 내용이 오류로 발생한다. &lt;a href=&quot;https://developer.chrome.com/docs/apps/contentSecurityPolicy/&quot;&gt;크롬 문서&lt;/a&gt;에서 별다른 내용을 얻을 수가 없어서 수차례 실패했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/73425926/129825541-1fd935ee-8265-48a1-a923-39d3c76c24fa.png&quot; alt=&quot;0-1-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결국 아까 위의 &lt;a href=&quot;https://developers-kr.googleblog.com/2016/08/how-to-use-firebase-in-chrome-extension.html&quot;&gt;구글 문서&lt;/a&gt;에서 다음과 같은 내용을 찾았다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public -&amp;gt; manifest.json&lt;/code&gt;에서 CSP에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://apis.google.com&lt;/code&gt;를 추가한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정리&quot;&gt;정리&lt;/h3&gt;

&lt;p&gt;Social Login 기능을 Chrome Extension에서 구현하는데 자동적으로 팝업 창이 닫힌다면 2가지를 추가하면 된다. 추가적으로 발생하는 오류의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;F12&lt;/code&gt;를 통해 오류를 확인하거나 크롬 익스텐션 오류 로그를 구글링하다보면 해결할 수 있다고 생각한다. 본인의 경우, 해당 팝업 문제를 해결하는데 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2시간 정도 소요&lt;/code&gt;되었다…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Firebase Auth 페이지에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sign-in method -&amp;gt; 승인된 도메인&lt;/code&gt;에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chrome-extension:// 자기 아이디 &lt;/code&gt;를 추가한다.&lt;/li&gt;
  &lt;li&gt;프로젝트 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public -&amp;gt; manifest.json&lt;/code&gt;에서 CSP에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://apis.google.com&lt;/code&gt;를 추가한다.&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="study" />
      

      
        <summary type="html">React-Router-DOM 사용 불가</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">투두리스트 Chrome Extension (4) - JS to React</title>
      <link href="https://jskim1215.github.io/project-2-4" rel="alternate" type="text/html" title="투두리스트 Chrome Extension (4) - JS to React" />
      <published>2021-08-12T13:01:06+09:00</published>
      <updated>2021-08-12T13:01:06+09:00</updated>
      <id>https://jskim1215.github.io/project-2-4</id>
      <content type="html" xml:base="https://jskim1215.github.io/project-2-4">&lt;h2 id=&quot;시작에-앞서&quot;&gt;시작에 앞서&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nomadcoders.co/nwitter&quot;&gt;Firebase 수업&lt;/a&gt;까지 듣고나니 React로 프로젝트를 진행해야겠다는 생각을 했다. 따라서 기존의 구현했던 기능들을 전부 React 파일로 옮겨서 진행하기로 결정했다.&lt;/p&gt;

&lt;h2 id=&quot;페이지-설계&quot;&gt;페이지 설계&lt;/h2&gt;

&lt;p&gt;우선 기본적으로 로그인 페이지와 메인 랜딩 페이지 두 개로 구분해서 페이지를 설계했다. 추후에 기능을 추가할 경우 페이지를 추가해서 사용할 예정이다.&lt;/p&gt;

&lt;h3 id=&quot;로그인-페이지&quot;&gt;로그인 페이지&lt;/h3&gt;

&lt;p&gt;로그인 페이지의 경우 기존의 수업에서 사용했던 코드를 대부분 가져와서 사용했다. CSS만 조금 변경했다.&lt;/p&gt;

&lt;h3 id=&quot;메인-페이지&quot;&gt;메인 페이지&lt;/h3&gt;

&lt;p&gt;메인 페이지에 크게 4가지 Component를 담기로 결정했다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;개인정보 페이지&lt;/code&gt; &lt;br /&gt;
간단하게 환영인사와 할 일을 입력할 수 있는 박스를 오른쪽 상단에 위치 시키기로 했다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;할 일 목록 페이지&lt;/code&gt;&lt;br /&gt;
입력한 할 일들의 데이터를 왼쪽 상단에서 확인할 수 있도록 테이블 리스트 형식으로 구현할 예정이다. 추가적으로 할 일 카테고리 기준으로 filtering이 가능한 기능을 구현할 것이다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;타이머 페이지&lt;/code&gt;&lt;br /&gt;
공부를 얼마나 했는지 추후에 data Tracking이 가능하도록 하기 위해 공부 시간 측정용 스톱워치 기능을 오른쪽 하단에 구현할 예정이다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;개인 PR 페이지&lt;/code&gt;&lt;br /&gt;
페이지의 구글 광고를 넣어 사용자 경험을 해치기보다는 프로젝트 제작 타임랩스, 블로그, 그리고 팀원 모집 글을 왼쪽 하단에 구현할 예정이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;폴더-구성&quot;&gt;폴더 구성&lt;/h2&gt;

&lt;p&gt;React의 Router 기능을 활용해서 구현할 예정이다. Router 관련 설명은 &lt;a href=&quot;https://jskim1215.github.io/study-4-2&quot;&gt;Router 관련 포스팅&lt;/a&gt;에서 확인할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;routes&quot;&gt;Routes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Home.js&lt;/li&gt;
  &lt;li&gt;Auth.js&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;components&quot;&gt;Components&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Profile.js&lt;/li&gt;
  &lt;li&gt;TodoAssign.js&lt;/li&gt;
  &lt;li&gt;TodoTable.js&lt;/li&gt;
  &lt;li&gt;Timer.js&lt;/li&gt;
  &lt;li&gt;Notice.js&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;변화하는-점&quot;&gt;변화하는 점&lt;/h2&gt;

&lt;h3 id=&quot;local-storage---firebase&quot;&gt;Local Storage -&amp;gt; Firebase&lt;/h3&gt;

&lt;p&gt;Auth 기능을 통해 유저 정보를 토대로 각자 database를 만들어서 사용자들의 할 일 데이터들을 다양한 기기에서 확인할 수 있도록 한다. Local Storage의 경우, 하나의 컴퓨터에서 밖에 사용이 안된다는 점을 보완할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;react-component&quot;&gt;React Component&lt;/h3&gt;

&lt;p&gt;하나의 Html, Javascript 파일로 구현했던 프로젝트를 React Component를 활용해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2개의 페이지&lt;/code&gt;로 구성된 프로젝트로 구현할 예정이다.
&lt;img src=&quot;https://user-images.githubusercontent.com/73425926/129823400-31114b3a-a26b-448a-beb7-6edb1165f117.png&quot; alt=&quot;1-2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;추가-예정-사항&quot;&gt;추가 예정 사항&lt;/h2&gt;

&lt;h3 id=&quot;개인-시간-관리-히스토리-기능&quot;&gt;개인 시간 관리 히스토리 기능&lt;/h3&gt;

&lt;p&gt;할 일 완료시 데이터들을 수집해서 전체 소요시간 및 카테고리별 소요시간 등 할 일 관련 데이터 분석한 내용을 보여주는 페이지이다.&lt;/p&gt;

&lt;h3 id=&quot;스터디서프-모드&quot;&gt;스터디/서프 모드&lt;/h3&gt;

&lt;p&gt;매번 타이머를 키지 못할 사용자들을 위해서 스터디모드일 경우, 타이머가 켜지지 않은 경우 사용자가 페이지를 떠날 경우 알람을 받을 수 있는 기능이다.&lt;/p&gt;

&lt;h3 id=&quot;마감일-기준-sorting&quot;&gt;마감일 기준 Sorting&lt;/h3&gt;

&lt;p&gt;마감일이 얼마 남지 않은 순으로 보여주는 기능이다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="project" />
      

      
        <summary type="html">시작에 앞서</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">트위터 클론 코딩 (2) - Authentication</title>
      <link href="https://jskim1215.github.io/study-3-2" rel="alternate" type="text/html" title="트위터 클론 코딩 (2) - Authentication" />
      <published>2021-08-12T13:01:01+09:00</published>
      <updated>2021-08-12T13:01:01+09:00</updated>
      <id>https://jskim1215.github.io/study-3-2</id>
      <content type="html" xml:base="https://jskim1215.github.io/study-3-2">&lt;h2 id=&quot;시작에-앞서&quot;&gt;시작에 앞서&lt;/h2&gt;

&lt;p&gt;만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Router&lt;/code&gt; 대해 충분히 이해하지 못했다면 &lt;a href=&quot;https://nomadcoders.co/courses&quot;&gt;React JS로 영화 웹 서비스 만들기&lt;/a&gt; 무료 강의를 먼저 수강하시기를 추천드립니다. 추가로 간단하게 정리본을 보고 싶다면 &lt;a href=&quot;https://jskim1215.github.io/study-4-2&quot;&gt;해당 블로그&lt;/a&gt;를 참고하시면 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;authentication이란&quot;&gt;Authentication이란?&lt;/h2&gt;

&lt;p&gt;Auth, OAuth, Authentication 모두 인증 기능과 관련있다. Firebase를 활용하면 코드 몇 줄로 쉽게 인증 기능을 구현할 수 있고, 추가적으로 다른 소셜 플랫폼의 로그인 기능을 이용할 수 있게 된다.&lt;/p&gt;

&lt;h2 id=&quot;일반-login-기능-구현하기&quot;&gt;일반 Login 기능 구현하기&lt;/h2&gt;

&lt;h3 id=&quot;firebase-설정하기&quot;&gt;Firebase 설정하기&lt;/h3&gt;

&lt;p&gt;우선 미리 Firebase 페이지에서 App을 생성했다는 가정하에 Authentication 페이지에 들어가서 Auth 페이지에서 로그인 설정을 해줘야한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/73425926/129816526-a995a2d7-06b2-4fd2-bc13-f282969115ff.png&quot; alt=&quot;3-2-1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;구현-코드&quot;&gt;구현 코드&lt;/h3&gt;

&lt;p&gt;먼저 input에서 이메일, 비밀번호를 입력받고 회원정보 여부에 따라 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create Account&lt;/code&gt; OR &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sign In&lt;/code&gt;를 통해 회원여부를 판단한다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;파이어베이스.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;authService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;로그인.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSubmit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;authService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createUserWithEmailAndPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;authService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;social-login-기능-구현하기&quot;&gt;Social Login 기능 구현하기&lt;/h2&gt;

&lt;h3 id=&quot;firebase-설정&quot;&gt;Firebase 설정&lt;/h3&gt;

&lt;p&gt;일반 로그인 경우와 마찬가지로 사용하고자하는 소셜 로그인 기능을 미리 활성화 해놓아야한다.&lt;/p&gt;

&lt;h3 id=&quot;구현-코드-1&quot;&gt;구현 코드&lt;/h3&gt;

&lt;p&gt;Firebase와 Auth javascript file에 다음과 같은 코드들을 추가해줘야한다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;파이어베이스.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebaseInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;로그인.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebaseInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GoogleAuthProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebaseInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GithubAuthProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;authService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;signInWithPopup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;유저-정보-불러오기&quot;&gt;유저 정보 불러오기&lt;/h2&gt;

&lt;p&gt;이전까지는 회원인지 아닌지 구분해주는 수문장의 기능을 담당했다. 하지만 실제로 필요한 것은 이 유저가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A유저&lt;/code&gt;인지 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B유저&lt;/code&gt;인지와 같이 유저 정보이다.&lt;/p&gt;

&lt;h3 id=&quot;코드-구조&quot;&gt;코드 구조&lt;/h3&gt;

&lt;p&gt;앞서 Router를 활용해 사이트 구조를 미리 설계했다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App.js -&amp;gt; Route.js -&amp;gt; Components&lt;/code&gt; 구조로 코드가 Render될 예정이다. 회원 정보는 Component들이 필요할 가능성이 높기 때문에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;상위 코드&lt;/code&gt;에서 불러오는 것이 좋을 것이라고 생각된다.&lt;/p&gt;

&lt;p&gt;실제로 해당 수업의 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App.js&lt;/code&gt;에서 User 정보를 불러와서 아래 Component에 뿌려주는 식으로 코드를 작성했다.&lt;/p&gt;

&lt;h3 id=&quot;구현-코드-2&quot;&gt;구현 코드&lt;/h3&gt;

&lt;p&gt;useEffect를 활용해 페이지가 실행될 때마다 매번 user의 data를 불러와서 Object로 저장해서 아래 component들에 전달할 수 있도록 구현했다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;authService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onAuthStateChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setUserObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;updateProfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateProfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setUserObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;주의사항&quot;&gt;주의사항&lt;/h3&gt;

&lt;p&gt;firebase에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt;와 관련해서 전달하는 정보는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;이름, uid, 프로필 사진&lt;/code&gt; 정도밖에 되지 않는다. 추가적인 정보를 저장하려면 database를 활용해서 저장하는 방법으로 구현해야한다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="study" />
      

      
        <summary type="html">시작에 앞서</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">트위터 클론 코딩 (1) - FireBase란?</title>
      <link href="https://jskim1215.github.io/study-3-1" rel="alternate" type="text/html" title="트위터 클론 코딩 (1) - FireBase란?" />
      <published>2021-08-12T12:01:01+09:00</published>
      <updated>2021-08-12T12:01:01+09:00</updated>
      <id>https://jskim1215.github.io/study-3-1</id>
      <content type="html" xml:base="https://jskim1215.github.io/study-3-1">&lt;p&gt;나는 창업을 하고 싶었지 프로그래밍을 배우고 싶지는 않았다. 하지만 당신이 가진 리소스가 충분하지 않다면 시간을 좀만 투자해서 당장 서비스를 런칭할 수 있는 방법 중 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FireBase&lt;/code&gt;는 최고의 선택이라고 생각한다.&lt;!--break--&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;firebase란&quot;&gt;FireBase란?&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FireBase&lt;/code&gt;는 백엔드 프로그램이라고 말할 수 있다. 그렇기 때문에 백엔드에 대한 큰 공부 없이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;로그인 기능&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;데이터베이스&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;저장공간&lt;/code&gt;을 사용할 수 있다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;하지만 이렇게 쉽게 사용할 수 있기 때문에 앞서 내가 서비스를 런칭해서 사용자의 피드백을 듣는 정도로 사용할 수 있는 것이다. 이후에 서비스를 계속해서 유지하는데 있어서 직접 서버를 운영해야하는 것은 틀림없다. 말그대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;아이디어를 테스트&lt;/code&gt;하는 정도로 사용해야한다는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;firebase-사용하는-방법&quot;&gt;FireBase 사용하는 방법&lt;/h2&gt;

&lt;p&gt;수업을 듣거나 이 블로그를 보는 경우, 다음의 과정을 통해 기본 세팅을 해주면 된다.&lt;/p&gt;

&lt;h3 id=&quot;react-application-세팅하기&quot;&gt;React Application 세팅하기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npx create-react-app &quot;폴더 명&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;u&gt;index.js&lt;/u&gt; / &lt;u&gt;App.js&lt;/u&gt;빼고 정리하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;firebase-연결하기&quot;&gt;FireBase 연결하기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/&quot;&gt;FireBase 페이지&lt;/a&gt; 접속하기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install --save firebase&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;u&gt;fbase.js&lt;/u&gt; 파일 생성하고 아래 코드 입력하기 (index.js 파일 있는 위치)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;firebase/app&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebaseConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;authDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;projectId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;storageBucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;messagingSenderId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;appId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initializeApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firebaseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;router-setup&quot;&gt;Router Setup&lt;/h2&gt;

&lt;p&gt;이 과정은 전체적인 서비스의 뼈대를 구축하는 과정이라고 생각하면 된다. 기획을 하는 입장이라면 스토리보드 같은 것이다.
다른 비유를 하자면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;코딩&lt;/code&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;구슬 꿰기 과정&lt;/code&gt;라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Router Setup&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;구슬과 실을 소분하는 과정&lt;/code&gt;이다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;트위터 클론코딩에 있어 크게 4가지 페이지를 구축할 예정이다.&lt;/p&gt;

&lt;h3 id=&quot;auth&quot;&gt;Auth&lt;/h3&gt;

&lt;p&gt;회원가입과 로그인을 위한 페이지.&lt;/p&gt;

&lt;h3 id=&quot;home&quot;&gt;Home&lt;/h3&gt;

&lt;p&gt;기본 랜딩페이지&lt;/p&gt;

&lt;h3 id=&quot;profile&quot;&gt;Profile&lt;/h3&gt;

&lt;p&gt;개인 페이지.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Router&lt;/code&gt;에 대해 잘 모른다면 &lt;a href=&quot;https://jskim1215.github.io/study-4-2&quot;&gt;React로 웹 앱 만들기&lt;/a&gt;를 먼저 공부하고 진행해야한다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="study" />
      

      
        <summary type="html">나는 창업을 하고 싶었지 프로그래밍을 배우고 싶지는 않았다. 하지만 당신이 가진 리소스가 충분하지 않다면 시간을 좀만 투자해서 당장 서비스를 런칭할 수 있는 방법 중 FireBase는 최고의 선택이라고 생각한다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">실전형 React Hooks 10개 (3) - UseRef</title>
      <link href="https://jskim1215.github.io/study-2-3" rel="alternate" type="text/html" title="실전형 React Hooks 10개 (3) - UseRef" />
      <published>2021-08-08T12:01:04+09:00</published>
      <updated>2021-08-08T12:01:04+09:00</updated>
      <id>https://jskim1215.github.io/study-2-3</id>
      <content type="html" xml:base="https://jskim1215.github.io/study-2-3">&lt;h2 id=&quot;useref란&quot;&gt;useRef란?&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useRef&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;querySelector&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getElementById&lt;/code&gt; 처럼 HTML element를 catch하는데 사용하는 느낌이다. &lt;!--break--&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hook Function&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 세 개의 코드를 통해 HTML Element 중 내가 원하는 element를 불러온다. 간단하게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useClick&lt;/code&gt; 함수가 실행되면서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useRef()&lt;/code&gt;를 통해 element를 불러오고 그 다음에 함수 처리를 한다음 element를 돌려준다. HTML Code에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useClick()&lt;/code&gt;을 통해 element를 함수 처리한다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;사실 적으면서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useRef()&lt;/code&gt;의 감 정도 잡은 것 같다. 실제 코드에 적용하는 것과는 아예 다르니 한 번 queryselector를 적용했던 코드들을 바꿔보는 것이 좋을 것 같다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;사실 프로젝트를 진행하면서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useRef&lt;/code&gt;를 사용해보지는 않아서 잘 모르는 부분이 있다. 여기 부분과 관련해서는 코드 예시를 하나 보면서 진행하겠다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;우클릭 후 새탭에서 이미지 열기&lt;/code&gt; 하면 보기 쉽다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/73425926/129316318-333bb1b6-67b2-4fd0-8a7d-158fc3cfab49.jpg&quot; alt=&quot;p-useref-1&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="study" />
      

      
        <summary type="html">useRef란?</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">실전형 React Hooks 10개 (2) - UseEffect</title>
      <link href="https://jskim1215.github.io/study-2-2" rel="alternate" type="text/html" title="실전형 React Hooks 10개 (2) - UseEffect" />
      <published>2021-08-08T11:01:01+09:00</published>
      <updated>2021-08-08T11:01:01+09:00</updated>
      <id>https://jskim1215.github.io/study-2-2</id>
      <content type="html" xml:base="https://jskim1215.github.io/study-2-2">&lt;h2 id=&quot;useeffect&quot;&gt;UseEffect&lt;/h2&gt;

&lt;p&gt;특정 상황에만 함수를 실행시키고 싶은 경우 사용한다. useEffect는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;function 그리고 dependency&lt;/code&gt;라는 두 개의 변수를 받는다. 여기서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependency&lt;/code&gt;라는 변수는 말 그대로 해당 element에 변화가 발생하면 function을 발생시키는 친구라고 생각하면 된다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그래서 보통 useEffect(function, [dependency]) 이런 형태로 사용된다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;주의할 점&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;빈 array []&lt;/code&gt;의 경우 한 번만 실행되고 어떤 변화에도 재실행되지 않는 경우에 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;사용-예시&quot;&gt;사용 예시&lt;/h2&gt;

&lt;h3 id=&quot;usetitle&quot;&gt;useTitle&lt;/h3&gt;

&lt;p&gt;구현 기능 : 웹페이지의 title을 변경하는 기능&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useTitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateTitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;htmlTitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;htmlTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;titleUpdater&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Loading...&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;titleUpdater&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Home&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;usescroll&quot;&gt;useScroll&lt;/h3&gt;

&lt;p&gt;구현 기능 : scroll이 발생했을 때, 특정 범위를 만족하면 함수 실행&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useScroll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onScroll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;screenX&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onScroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onScroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>CodePurple</name>
        
        
      </author>

      

      
        <category term="study" />
      

      
        <summary type="html">UseEffect</summary>
      

      
      
    </entry>
  
</feed>
